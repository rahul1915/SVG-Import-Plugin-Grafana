{"version":3,"sources":["../src/svg_ctrl.js"],"names":["MetricsPanelCtrl","_","kbn","TimeSeries","rendering","SVGDemos","Snap","ace","GrafanaJSCompleter","$lang_tools","$control","$panel","editor","session","pos","prefix","callback","getCursorPosition","line","getLine","row","substring","column","match","length","lastIndexOf","panelthis","evalObj","eval","evaluatePrefix","ctrl","svgnode","document","querySelector","wordList","map","word","caption","value","meta","key","push","Array","isArray","SVGCtrl","$scope","$injector","$rootScope","panelDefaults","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","aliasColors","format","svgImportConfig","statsList","svg_data","js_code","js_init_code","useSVGBuilder","colorcodes","svgBuilderData","width","height","viewport","x","y","elements","defaults","panel","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","demos","initialized","editors","addEditorTab","prepareEditor","unitFormats","getUnitFormats","aceLangTools","acequire","addCompleter","nodeId","setTimeout","$","edit","attr","setValue","getSession","val","getValue","setInitFunction","setHandleMetricFunction","render","err","console","error","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","theme","mode","showPrintMargin","resetSVG","readOnly","subItem","series","color","alias","handleMetric","Function","doInit","isFunction","dataList","tables","type","tableHandler","seriesHandler","metricList","seriesData","datapoints","target","flotpairs","getFlotPairs","tableData","columnNames","columns","text","rows","datapoint","forEach","columnIndex","aliasName","i","getSeriesIdByAlias","isNumber","decimals","scaledDecimals","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","result","max","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","scope","elem","attrs","idx","splice","buildSVG","steps","move","request","XMLHttpRequest","open","addEventListener","event","status","repositories","JSON","parse","responseText","warn","statusText","send","newCategories","selectedSVG","selectedRepository","items","item","includes","category","categories","svglist","filter","selectedCategory","svg","name","id","path","rotate","rcenterx","rcentery","scale","all","array","deferred","Deferred","fulfilled","results","resolve","promise","when","then","createElementNS","svgNS","namespaceURI","setAttribute","promises","element","dfd","get","data","svgFragment","g","appendChild","html","documentElement","children","outerHTML","file","getElementById","files","fileName","idList","valueList","selectedID","selectedValue","selectedStats","selectedMetric","fr","FileReader","onload","onFileLoad","e","elementList","getElementsByTagName","innerHTML","undefined","trim","elm","previousElementSibling","tagName","firstElementChild","readAsText","currentObj","metricAlias","threshold","showValue","statsValue","thFlag","minth","maxth","lth","mth","rth","stats","split","component","metricValue","index","thresholdBlock","htmlObject","createElement","total","elementTagName","closest","importConf","metric","colorCode","label","updateSVGConfiguration","list","j","stat","currObj","templateUrl"],"mappings":"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","file":"svg_ctrl.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series';\nimport rendering from './rendering';\nimport { SVGDemos } from './demos';\nimport { Snap } from './node_modules/snapsvg/dist/snap.svg-min.js';\nimport ace from './node_modules/brace/index.js';\nimport './node_modules/brace/ext/language_tools.js';\nimport './node_modules/brace/theme/tomorrow_night_bright.js';\nimport './node_modules/brace/mode/javascript.js';\nimport './node_modules/brace/mode/svg.js';\n\nclass GrafanaJSCompleter {\n    constructor($lang_tools, $control, $panel) {\n        this.$lang_tools = $lang_tools;\n        this.$control = $control;\n        this.$panel = $panel;\n    }\n\n    getCompletions(editor, session, pos, prefix, callback) {\n        var pos = editor.getCursorPosition();\n        var line = editor.session.getLine(pos.row);\n\n        prefix = line.substring(0, pos.column).match(/this\\.\\S*/g);\n        if (prefix) {\n            prefix = prefix[prefix.length - 1];\n            prefix = prefix.substring(0, prefix.lastIndexOf('.'));\n\n            var panelthis = this.$panel;\n            var evalObj = eval('panel' + prefix);\n            this.evaluatePrefix(evalObj, callback);\n            return;\n        }\n\n        prefix = line.substring(0, pos.column).match(/ctrl\\.\\S*/g);\n        if (prefix) {\n            prefix = prefix[prefix.length - 1];\n            prefix = prefix.substring(0, prefix.lastIndexOf('.'));\n\n            var ctrl = this.$control;\n            var evalObj = eval(prefix);\n            this.evaluatePrefix(evalObj, callback);\n            return;\n        }\n\n        prefix = line.substring(0, pos.column).match(/svgnode\\.\\S*/g);\n        if (prefix) {\n            prefix = prefix[prefix.length - 1];\n            prefix = prefix.substring(0, prefix.lastIndexOf('.'));\n\n            var svgnode = document.querySelector('.svg-object');\n            var evalObj = eval(prefix);\n            this.evaluatePrefix(evalObj, callback);\n            return;\n        }\n\n        if (prefix == '') {\n            var wordList = ['ctrl', 'svgnode', 'this'];\n\n            callback(null, wordList.map(function(word) {\n                return {\n                    caption: word,\n                    value: word,\n                    meta: 'Grafana keyword'\n                };\n            }));\n        }\n    }\n\n    evaluatePrefix(evalObj, callback) {\n        var wordList = [];\n        for (var key in evalObj) {\n            wordList.push(key);\n        }\n        callback(null, wordList.map(function(word) {\n            return {\n                caption: word + ': ' + (Array.isArray(evalObj[word]) ? 'Array[' + (evalObj[word] || []).length + ']' : typeof evalObj[word]),\n                value: word,\n                meta: \"Grafana keyword\"\n            };\n        }));\n        return;\n    }\n}\n\n\nexport class SVGCtrl extends MetricsPanelCtrl {\n\n    constructor($scope, $injector, $rootScope) {\n        super($scope, $injector);\n        this.$rootScope = $rootScope;\n\n        var panelDefaults = {\n            links: [],\n            datasource: null,\n            maxDataPoints: 3,\n            interval: null,\n            targets: [{}],\n            cacheTimeout: null,\n            nullPointMode: 'connected',\n            aliasColors: {},\n            format: 'short',\n            svgImportConfig : [],\n            statsList : [],\n\n            svg_data: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" viewBox=\"0 0 1000 1000\" ></svg>',\n            js_code: '',\n            js_init_code: '',\n            useSVGBuilder: false,\n            colorcodes : \"#32CD32,#FFC200,#FF0000\",\n            svgBuilderData: {\n                width: '100%',\n                height: '100%',\n                viewport: {\n                    x: 0,\n                    y: 0,\n                    width: 1000,\n                    height: 1000\n                },\n                elements: []\n            }\n        };\n\n        _.defaults(this.panel, panelDefaults);\n\n        this.events.on('render', this.onRender.bind(this));\n        this.events.on('refresh', this.onRender.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-error', this.onDataError.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n        this.demos = new SVGDemos(this);\n        this.initialized = 0;\n        this.editors = {};\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('SVG Builder', 'public/plugins/marcuscalidus-svg-panel/editor_builder.html', 2);\n        this.addEditorTab('SVG', 'public/plugins/marcuscalidus-svg-panel/editor_svg.html', 3);\n        this.addEditorTab('Events', 'public/plugins/marcuscalidus-svg-panel/editor_events.html', 4);\n        this.prepareEditor();\n        this.unitFormats = kbn.getUnitFormats();\n        this.aceLangTools = ace.acequire(\"ace/ext/language_tools\");\n\n        this.aceLangTools.addCompleter(new GrafanaJSCompleter(this.aceLangTools, this, this.panel));\n    }\n\n    doShowAceJs(nodeId) {\n        setTimeout(function() {\n            if ($('#' + nodeId).length === 1) {\n                this.editors[nodeId] = ace.edit(nodeId);\n                $('#' + nodeId).attr('id', nodeId + '_initialized');\n                this.editors[nodeId].setValue(this.panel[nodeId], 1);\n                this.editors[nodeId].getSession().on('change', function() {\n                    var val = this.editors[nodeId].getSession().getValue();\n                    this.panel[nodeId] = val;\n                    try {\n                        this.setInitFunction();\n                        this.setHandleMetricFunction();\n                        this.render();\n                    } catch (err) {\n                        console.error(err);\n                    }\n                }.bind(this));\n                this.editors[nodeId].setOptions({\n                    enableBasicAutocompletion: true,\n                    enableLiveAutocompletion: true,\n                    theme: 'ace/theme/tomorrow_night_bright',\n                    mode: 'ace/mode/javascript',\n                    showPrintMargin: false\n                });\n            }\n        }.bind(this), 100);\n        return true;\n    }\n\n    doShowAceSvg(nodeId) {\n        setTimeout(function() {\n            if ($('#' + nodeId).length === 1) {\n                this.editors[nodeId] = ace.edit(nodeId);\n                $('#' + nodeId).attr('id', nodeId + '_initialized');\n                this.editors[nodeId].setValue(this.panel[nodeId], 1);\n                this.editors[nodeId].getSession().on('change', function() {\n                    var val = this.editors[nodeId].getSession().getValue();\n                    this.panel[nodeId] = val;\n                    try {\n                        this.resetSVG();\n                        this.render();\n                    } catch (err) {\n                        console.error(err);\n                    }\n                }.bind(this));\n                this.editors[nodeId].setOptions({\n                    enableBasicAutocompletion: true,\n                    enableLiveAutocompletion: true,\n                    readOnly: this.panel.useSVGBuilder,\n                    theme: 'ace/theme/tomorrow_night_bright',\n                    mode: 'ace/mode/svg',\n                    showPrintMargin: false\n                });\n            }\n        }.bind(this), 100);\n        return true;\n    }\n\n    setUnitFormat(subItem) {\n        this.panel.format = subItem.value;\n        this.render();\n    }\n\n    onDataError() {\n        this.series = [];\n        this.render();\n    }\n\n    changeSeriesColor(series, color) {\n        series.color = color;\n        this.panel.aliasColors[series.alias] = series.color;\n        this.render();\n    }\n\n    setHandleMetricFunction() {\n        this.panel.handleMetric = Function('ctrl', 'svgnode', this.panel.js_code);\n    }\n\n    setInitFunction() {\n        this.initialized = 0;\n        this.panel.doInit = Function('ctrl', 'svgnode', this.panel.js_init_code);\n    }\n\n    onRender() {\n        if (!_.isFunction(this.panel.handleMetric)) {\n            this.setHandleMetricFunction();\n        }\n\n        if (!_.isFunction(this.panel.doInit)) {\n            this.setInitFunction();\n        }\n    }\n\n    onDataReceived(dataList) {\n\t\t\n\t\tthis.tables = [];\n\t\tthis.series = [];\n\t\t\n\t\tif (dataList.length > 0 && dataList[0].type === 'table') {\n\t\t  this.tables = dataList.map(this.tableHandler.bind(this));\n\t\t} else {\n\t\t  this.series = dataList.map(this.seriesHandler.bind(this));\n\t\t}\n\n        this.render();\n    }\n\n    resetSVG() {\n        this.initialized = 0;\n        this.panel.metricList;\n        this.panel.js_code;\n    }\n\n    seriesHandler(seriesData) {\n        var series = new TimeSeries({\n            datapoints: seriesData.datapoints,\n            alias: seriesData.target\n        });\n\n        series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n        return series;\n    }\n\t\n\ttableHandler(tableData) {\n\t\t\n\t\tconst columnNames = tableData.columns.map(column => column.text);\n\n\t\tconst rows = tableData.rows.map(row => {\n\t\t  const datapoint = {};\n\n\t\t  row.forEach((value, columnIndex) => {\n\t\t\tconst key = columnNames[columnIndex];\n\t\t\tdatapoint[key] = value;\n\t\t  });\n\n\t\t  return datapoint;\n\t\t});\n\n\t\treturn { columnNames: columnNames, rows: rows };\n\t}\n\n    getSeriesIdByAlias(aliasName) {\n        for (var i = 0; i < this.series.length; i++) {\n            if (this.series[i].alias == aliasName) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    getSeriesElementByAlias(aliasName) {\n        var i = this.getSeriesIdByAlias(aliasName);\n        if (i >= 0) {\n            return this.series[i];\n        }\n        return null;\n    }\n\n    getDecimalsForValue(value) {\n        if (_.isNumber(this.panel.decimals)) {\n            return { decimals: this.panel.decimals, scaledDecimals: null };\n        }\n\n        var delta = value / 2;\n        var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n        var magn = Math.pow(10, -dec);\n        var norm = delta / magn; // norm is between 1.0 and 10.0\n        var size;\n\n        if (norm < 1.5) {\n            size = 1;\n        } else if (norm < 3) {\n            size = 2;\n            // special case for 2.5, requires an extra decimal\n            if (norm > 2.25) {\n                size = 2.5;\n                ++dec;\n            }\n        } else if (norm < 7.5) {\n            size = 5;\n        } else {\n            size = 10;\n        }\n\n        size *= magn;\n\n        // reduce starting decimals if not needed\n        if (Math.floor(value) === value) { dec = 0; }\n\n        var result = {};\n        result.decimals = Math.max(0, dec);\n        result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n        return result;\n    }\n\n    formatValue(value) {\n        var decimalInfo = this.getDecimalsForValue(value);\n        var formatFunc = kbn.valueFormats[this.panel.format];\n        if (formatFunc) {\n            return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        }\n        return value;\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        rendering(scope, elem, attrs, ctrl);\n    }\n\n    removeElement(idx) {\n        this.panel.svgBuilderData.elements.splice(idx, 1);\n        this.buildSVG();\n    }\n\n    moveElement(idx, steps) {\n        this.panel.svgBuilderData.elements = _.move(this.panel.svgBuilderData.elements, idx, idx + steps);\n        this.buildSVG();\n    }\n\n    prepareEditor() {\n        var request = new XMLHttpRequest();\n\n        request.open(\"GET\", \"public/plugins/marcuscalidus-svg-panel/assets/repositories.json\");\n        request.addEventListener('load', (event) => {\n            if (request.status >= 200 && request.status < 300) {\n                this.panel.repositories = JSON.parse(request.responseText);\n            } else {\n                console.warn(request.statusText, request.responseText);\n            }\n        });\n        request.send();\n    }\n\n    repositorySelected() {\n        let newCategories = [];\n        this.panel.selectedSVG = null;\n\n        if (this.panel.repositories[this.panel.selectedRepository]) {\n            _.forEach(this.panel.repositories[this.panel.selectedRepository].items,\n                (item) => {\n                    if (!_.includes(newCategories, item.category)) {\n                        newCategories.push(item.category);\n                    }\n                })\n        }\n\n        this.panel.categories = newCategories;\n    }\n\n    categorySelected() {\n        this.panel.svglist = [];\n        this.panel.selectedSVG = null;\n\n        if (this.panel.repositories[this.panel.selectedRepository]) {\n            this.panel.svglist = _.filter(this.panel.repositories[this.panel.selectedRepository].items,\n                (item) => item.category === this.panel.selectedCategory);\n        }\n    }\n\n    addSVGItem() {\n        let svg = JSON.parse(this.panel.selectedSVG);\n\n        this.panel.svgBuilderData.elements.push({\n            name: svg.name,\n            id: svg.name,\n            path: svg.path,\n            x: 0,\n            y: 0,\n            rotate: 0,\n            rcenterx: 0,\n            rcentery: 0,\n            scale: 1\n        })\n        this.buildSVG();\n    }\n\n    buildSVG() {\n        var all = function(array) {\n            var deferred = $.Deferred();\n            var fulfilled = 0,\n                length = array.length;\n            var results = [];\n\n            if (length === 0) {\n                deferred.resolve(results);\n            } else {\n                array.forEach(function(promise, i) {\n                    $.when(promise()).then(function(value) {\n                        results[i] = value;\n                        fulfilled++;\n                        if (fulfilled === length) {\n                            deferred.resolve(results);\n                        }\n                    });\n                });\n            }\n\n            return deferred.promise();\n        };\n\n        let panel = this.panel;\n        if (panel.useSVGBuilder) {\n            let svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n            let svgNS = svg.namespaceURI;\n\n            svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n            svg.setAttribute('width', panel.svgBuilderData.width);\n            svg.setAttribute('height', panel.svgBuilderData.height);\n            svg.setAttribute('viewBox', panel.svgBuilderData.viewport.x + ' ' +\n                panel.svgBuilderData.viewport.y + ' ' +\n                panel.svgBuilderData.viewport.width + ' ' +\n                panel.svgBuilderData.viewport.height);\n\n            let promises = [];\n\n            panel.svgBuilderData.elements.forEach((element) => {\n                promises.push(() => {\n                    return $.Deferred((dfd) => {\n                        $.get('public/plugins/marcuscalidus-svg-panel/assets/' + element.path, (data) => {\n                            dfd.resolve(data);\n                        });\n                    }).promise();\n                });\n            });\n\n            $.when(all(promises)).then(results => {\n                results.forEach(\n                    (svgFragment, i) => {\n                        let g = document.createElementNS(svgNS, 'g');\n                        g.setAttribute('id', panel.svgBuilderData.elements[i].id)\n                        g.setAttribute('transform', 'translate(' + panel.svgBuilderData.elements[i].x + ' ' + panel.svgBuilderData.elements[i].y + ') ' +\n                            'rotate(' + panel.svgBuilderData.elements[i].rotate + ' ' + panel.svgBuilderData.elements[i].rcenterx + ' ' + panel.svgBuilderData.elements[i].rcentery + ') ' +\n                            'scale(' + panel.svgBuilderData.elements[i].scale + ')');\n                        svg.appendChild(g);\n                        $(g).html(svgFragment.documentElement.children);\n                    }\n                )\n                panel.svg_data = svg.outerHTML;\n                this.resetSVG();\n                this.render();\n            });\n        }\n    }\n    \n    onChooseFile() {\n        this.panel.svgImportConfig = [];\n        let panel = this.panel;\n        let file = document.getElementById('file').files[0];\n        panel.fileName = file.name;\n        panel.idList = [];\n        panel.valueList = [];\n        panel.js_code = \"\";\n        panel.selectedID = null;\n        panel.selectedValue = null;\n        panel.metricList = this.series;\n        panel.statsList = [\n            {\"name\":\"Current\", \"value\":\"current\"},\n            {\"name\":\"Average\", \"value\":\"avg\"},\n            {\"name\":\"Max\", \"value\":\"max\"},\n            {\"name\":\"Min\", \"value\":\"min\"},\n            {\"name\":\"Total\", \"value\":\"total\"}\n        ];\n        panel.selectedStats = \"total\";\n        if(this.series.length != 0) {\n            panel.selectedMetric = this.series[0].alias;\n        }\n        var idList = [];\n        var valueList = [];\n        let fr = new FileReader();\n        fr.onload = onFileLoad;\n        function onFileLoad(e) {\n            panel.svg_data = e.target.result;\n            var elementList = document.getElementsByTagName(\"text\");\n            for (var i in elementList) {\n                if(elementList[i].id) {\n                    idList.push(elementList[i].id);\n                }\n                if(elementList[i].innerHTML != undefined && elementList[i].innerHTML.trim() != \"\") {\n                    if(elementList[i].innerHTML != \"[Not supported by viewer]\"){\n                        valueList.push(elementList[i].innerHTML);\n                    } else {\n                        var elm = elementList[i].previousElementSibling;\n                        if(elm.tagName === \"foreignObject\"){\n                            while(elm.firstElementChild) {\n                                elm = elm.firstElementChild;\n                            }\n                            valueList.push(elm.innerHTML.trim());\n                        }\n                    }\n                }\n            }\n        } \n        fr.readAsText(file);\n        let currentObj = this;\n        setTimeout(function() {\n            panel.idList = idList;\n            panel.valueList = valueList;\n            panel.selectedValue = valueList[0];\n            panel.selectedID = idList[0];\n            currentObj.resetSVG();\n            currentObj.render();\n        }, 100);\n        this.panel.js_code = \"\";\n        this.setHandleMetricFunction();\n        this.resetSVG();\n        this.render();\n    }\n\n    addMetricValueWithSVG(value, metricAlias, threshold, colorcodes, showValue, statsValue){\n        var thFlag = true;\n        var minth, maxth, lth, mth, rth;\n        var stats = statsValue;\n        if(threshold != undefined && threshold != \"\"){\n            minth = threshold.split(\",\")[0];\n            maxth = threshold.split(\",\")[1];\n            lth = colorcodes.split(\",\")[0];\n            mth = colorcodes.split(\",\")[1];\n            rth = colorcodes.split(\",\")[2];\n        }else{\n            thFlag = false;\n        }\n        var component = null;\n        var metricValue = null;\n        var index = -1;\n        var thresholdBlock = \"\";\n        var htmlObject = document.createElement('div');\n        htmlObject.innerHTML = this.panel.svg_data;\n        for(var i in this.panel.metricList) {\n            if(this.panel.metricList[i].alias ==  metricAlias){\n                metricValue = this.panel.metricList[i].stats.total;\n                index = i;\n                break;\n            }\n        }\n        var elementList = htmlObject.getElementsByTagName(\"foreignObject\");\n        if(elementList.length == 0) {\n            elementList = htmlObject.getElementsByTagName(\"text\");\n        }\n        for (var i in elementList) {\n            component = elementList[i];\n            while(component.firstElementChild) {\n                component = component.firstElementChild;\n            }\n            if(component.innerHTML.trim() === value) {\n                component.setAttribute('id',(value+'_1'));\n                break;\n            }\n        }\n        var elementTagName = component.closest(\"g\").previousElementSibling.tagName;\n        this.panel.svg_data = htmlObject.innerHTML;\n        this.panel.js_code = this.panel.js_code + 'document.getElementById(\"'+ (value+'_1') +'\").innerHTML' + '= Math.round(ctrl.series['+ index +'].stats.'+stats+');';\n        if(thFlag) {\n            if(!showValue) {\n                this.panel.js_code = this.panel.js_code + 'document.getElementById(\"'+ (value+'_1') +'\").style = \"display:none;text-align:inherit;text-decoration:inherit;\";'\n            }\n            if(elementTagName != \"path\"){\n                thresholdBlock = 'if(' +  minth + '> Math.round(ctrl.series['+ index + '].stats.'+stats+')){'\n                   + 'document.getElementById(\"'+ (value+'_1') +'\").closest(\"g\").previousElementSibling.setAttribute(\"fill\",\"' + lth + '\");'\n                   + '}else if(' + minth + '<= Math.round(ctrl.series[' + index + '].stats.'+stats+') && Math.round(ctrl.series['+ index + '].stats.'+stats+') <=' + maxth+') {'\n                   + 'document.getElementById(\"'+ (value+'_1') +'\").closest(\"g\").previousElementSibling.setAttribute(\"fill\",\"' + mth + '\");'\n                   + '}else if(Math.round(ctrl.series['+index+'].stats.'+stats+') >'+ maxth+') {' \n                   + 'document.getElementById(\"'+ (value+'_1') +'\").closest(\"g\").previousElementSibling.setAttribute(\"fill\",\"' + rth + '\");'\n                   + '}'\n            }else {\n                thresholdBlock = 'var pathComp = document.getElementById(\"'+ (value+'_1') +'\").closest(\"g\").previousElementSibling;if(' +  minth + '> Math.round(ctrl.series['+ index +'].stats.'+stats+')){'\n                    + 'while(pathComp.tagName == \"path\"){'\n                        +'pathComp.setAttribute(\"fill\",\"' + lth + '\");'\n                        +'pathComp.setAttribute(\"stroke\",\"' + lth + '\");'\n                        +'pathComp = pathComp.previousElementSibling;}'\n                    + '}else if(' + minth + '<= Math.round(ctrl.series[' + index + '].stats.'+stats+') && Math.round(ctrl.series['+ index + '].stats.'+stats+') <=' + maxth+') {'\n                    + 'while(pathComp.tagName == \"path\"){'\n                        +'pathComp.setAttribute(\"fill\",\"' + mth + '\");'\n                        +'pathComp.setAttribute(\"stroke\",\"' + mth + '\");'\n                        +'pathComp = pathComp.previousElementSibling;}'\n                    + '}else if(Math.round(ctrl.series['+index+'].stats.'+stats+') >'+ maxth+') {' \n                    + 'while(pathComp.tagName == \"path\"){'\n                        +'pathComp.setAttribute(\"fill\",\"' + rth + '\");'\n                        +'pathComp.setAttribute(\"stroke\",\"' + rth + '\");'\n                        +'pathComp = pathComp.previousElementSibling;}'\n                    + '}'\n            }\n            this.panel.js_code = this.panel.js_code + thresholdBlock;\n        }\n        var importConf = {\n            id : value + '_1',\n            metric : metricAlias,\n            threshold : threshold,\n            colorCode : threshold != '' ? colorcodes : '',\n            component : value,\n            label : showValue,\n            stats : stats\n        };\n        this.panel.svgImportConfig.push(importConf);\n        this.setHandleMetricFunction();\n        this.resetSVG();\n        this.render();\n    }\n    editImportedSVG(elem) {\n        for(var i=0;i<this.panel.svgImportConfig.length;i++) {\n            if(this.panel.svgImportConfig[i].id == elem.id) {\n                this.panel.svgImportConfig[i] = elem;\n            }\n        }\n        this.updateSVGConfiguration(this.panel.svgImportConfig);\n    }\n\n    removeImportedSVG(elem) {\n        for(var i=0;i<this.panel.svgImportConfig.length;i++) {\n            if(this.panel.svgImportConfig[i].id == elem.id) {\n                this.panel.svgImportConfig.splice(i, 1);\n            }\n        }\n        this.updateSVGConfiguration(this.panel.svgImportConfig);\n    }\n\n    updateSVGConfiguration(list) {\n        this.panel.js_code = \"\";\n        for(var j=0; j<list.length;j++) {\n            var value = list[j].component;\n            var threshold = list[j].threshold;\n            var colorcodes = list[j].colorCode;\n            var metricAlias = list[j].metric;\n            var label = list[j].label;\n            var stats = list[j].stats;\n            var thFlag = true;\n            var minth, maxth, lth, mth, rth;\n            if(threshold != undefined && threshold != \"\"){\n                minth = threshold.split(\",\")[0];\n                maxth = threshold.split(\",\")[1];\n                lth = colorcodes.split(\",\")[0];\n                mth = colorcodes.split(\",\")[1];\n                rth = colorcodes.split(\",\")[2];\n            }else{\n                thFlag = false;\n            }\n            var metricValue = null;\n            var index = -1;\n            var thresholdBlock = \"\";\n            for(var i in this.panel.metricList) {\n                if(this.panel.metricList[i].alias ==  metricAlias){\n                    metricValue = this.panel.metricList[i].stats.total;\n                    index = i;\n                    break;\n                }\n            }\n            var elementTagName = document.getElementById(value+'_1').closest(\"g\").previousElementSibling.tagName;\n            this.panel.js_code = this.panel.js_code + 'document.getElementById(\"'+ (value+'_1') +'\").innerHTML' + '= Math.round(ctrl.series['+ index +'].stats.'+stats+');'\n            if(thFlag) {\n                if(!label) {\n                    this.panel.js_code = this.panel.js_code + 'document.getElementById(\"'+ (value+'_1') +'\").style = \"display:none;text-align:inherit;text-decoration:inherit;\";'\n                }\n                if(elementTagName != \"path\"){\n                    thresholdBlock = 'if(' +  minth + '> Math.round(ctrl.series['+ index + '].stats.'+stats+')){'\n                       + 'document.getElementById(\"'+ (value+'_1') +'\").closest(\"g\").previousElementSibling.setAttribute(\"fill\",\"' + lth + '\");'\n                       + '}else if(' + minth + '<= Math.round(ctrl.series[' + index + '].stats.'+stats+') && Math.round(ctrl.series['+ index + '].stats.'+stats+') <=' + maxth+') {'\n                       + 'document.getElementById(\"'+ (value+'_1') +'\").closest(\"g\").previousElementSibling.setAttribute(\"fill\",\"' + mth + '\");'\n                       + '}else if(Math.round(ctrl.series['+index+'].stats.'+stats+') >'+ maxth+') {' \n                       + 'document.getElementById(\"'+ (value+'_1') +'\").closest(\"g\").previousElementSibling.setAttribute(\"fill\",\"' + rth + '\");'\n                       + '}'\n                }else {\n                    thresholdBlock = 'var pathComp = document.getElementById(\"'+ (value+'_1') +'\").closest(\"g\").previousElementSibling;if(' +  minth + '> Math.round(ctrl.series['+ index +'].stats.'+stats+')){'\n                        + 'while(pathComp.tagName == \"path\"){'\n                            +'pathComp.setAttribute(\"fill\",\"' + lth + '\");'\n                            +'pathComp.setAttribute(\"stroke\",\"' + lth + '\");'\n                            +'pathComp = pathComp.previousElementSibling;}'\n                        + '}else if(' + minth + '<= Math.round(ctrl.series[' + index + '].stats.'+stats+') && Math.round(ctrl.series['+ index + '].stats.'+stats+') <=' + maxth+') {'\n                        + 'while(pathComp.tagName == \"path\"){'\n                            +'pathComp.setAttribute(\"fill\",\"' + mth + '\");'\n                            +'pathComp.setAttribute(\"stroke\",\"' + mth + '\");'\n                            +'pathComp = pathComp.previousElementSibling;}'\n                        + '}else if(Math.round(ctrl.series['+index+'].stats.'+stats+') >'+ maxth+') {' \n                        + 'while(pathComp.tagName == \"path\"){'\n                            +'pathComp.setAttribute(\"fill\",\"' + rth + '\");'\n                            +'pathComp.setAttribute(\"stroke\",\"' + rth + '\");'\n                            +'pathComp = pathComp.previousElementSibling;}'\n                        + '}'\n                }\n                this.panel.js_code = this.panel.js_code + thresholdBlock;\n            }\n        }\n        this.setHandleMetricFunction();\n        this.resetSVG();\n        this.render();\n    }\n\n    metricSelected(metric){\n        console.log(metric);\n    }\n\n    statSelected(stat){\n        console.log(stat);\n    }\n\n    valueSelected(val) {\n        console.log(val);\n    }\n    \n    refreshMetric(){\n        this.panel.metricList = this.series;\n        let currObj = this;\n        setTimeout(function() {\n            currObj.panel.selectedMetric = currObj.series[0].alias;\n            currObj.panel.selectedStats = \"total\"; \n        }, 25);\n    }\n       \n}\n\nSVGCtrl.templateUrl = 'module.html';"]}